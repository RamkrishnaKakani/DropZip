trigger:
- master
- development

pr:
- none

variables:
  ${{ if and(eq(variables['Build.SourceBranchName'], 'master'), ne(variables['Build.Reason'], 'PullRequest')) }}:
    #PatchVersionMain : $[counter(variables['PatchVersionMain'],0)]
    PatchVersionMain: $[counter(format('{0}.{1}.{2}',variables['MajorVersionMain'],variables['MinorVersionMain'],variables['PatchVersionMain']), 0)]
    BuildVersion: $(MajorVersionMain).$(MinorVersionMain).$(PatchVersionMain)
    DropLocation : C:\Users\R888066\Desktop\DropLocation\Master

  ${{ if and(eq(variables['Build.SourceBranchName'], 'development'), ne(variables['Build.Reason'], 'PullRequest')) }}:
    PatchVersion : $[counter(variables['PatchVersion'],0)]
    BuildVersion: $(MajorVersion).$(MinorVersion).$(PatchVersion)
    DropLocation : C:\Users\R888066\Desktop\DropLocation\Dev

steps:
- powershell: |
    Write-Verbose -Verbose "##vso[build.updatebuildnumber]$(BuildVersion)"
  displayName: Update Build Number
            
- checkout: self
  displayName: 'Download Files From Repository'

- task: CopyFiles@2
  displayName: 'Copy Readme.txt File '
  inputs:
    SourceFolder: '$(build.sourcesdirectory)'
    Contents: 'Readme.txt'
    TargetFolder: '$(DropLocation)'
    OverWrite: true

- task: DeleteFiles@1
  displayName: 'Remove Unwanted Files'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: | 
      *.yml
      Readme.txt
    RemoveDotFiles: true

- task: ArchiveFiles@2
  displayName: 'Drop Zip file At DropLocation'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(DropLocation)/$(BuildVersion).zip'
    replaceExistingArchive: true
